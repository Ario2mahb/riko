# Pipe pipe_926a27580e74684fc63559b92bddaa30 generated by pipe2py

from pipe2py import Context
from pipe2py.modules import pipefetch, pipeuniq, pipefilter, pipesort


def pipe_gigs(context=None, item=None, conf=None, **kwargs):
    # todo: insert pipeline description here
    conf = conf or {}

    if context and context.describe_input:
        return []

    urls = [
        'http://www.guru.com/rss/jobs/c/web-software-it/',
        'https://www.elance.com/r/rss/jobs/cat-it-programming/fxd-true/o-1/bgt-gt500-ns1/sct-database-development-10217-data-analysis-14174-database-administration-14177-business-intelligence-14173-data-engineering-14175-system-administration-10219-other-data-science-14178-technical-support-10218-other-it-programming-12350-software-application-10216-website-design-10225-web-programming-10224/tls-1/s-timelistedSort'
        ]

    URL = [{'type': 'url', 'value': url} for url in urls]

    sw_68 = pipefetch.pipe(context=context, conf={'URL': URL})

    sw_90 = pipe_uniq(
        context, sw_68, conf={'field': {'type': 'text', 'value': 'link'}})

    COMBINE = {'type': 'text', 'value': 'or'}
    MODE = {'type': 'text', 'value': 'block'}
    field = {'type': 'text', 'value': 'title'}
    value = {'type': 'text', 'value': 'php'}
    op = {'type': 'text', 'value': 'contains'}
    RULE = [{'field': field, 'value': value, 'op': op}]
    sw_87 = pipe_filter(
        context, sw_90, conf={'COMBINE': COMBINE, 'MODE': MODE, 'RULE': RULE})

    field = {'type': 'text', 'value': 'pubDate'}
    direction = {'type': 'text', 'value': 'DESC'}
    sw_101 = pipe_sort(
        context, sw_87, conf={'KEY': [{'field': field, 'dir': direction}]})

    return pipe_output(context, sw_101, conf={})


if __name__ == "__main__":
    for i in pipe_gigs(Context()):
        print i
