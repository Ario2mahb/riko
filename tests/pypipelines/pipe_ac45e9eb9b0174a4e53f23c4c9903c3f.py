# Pipe pipe_ac45e9eb9b0174a4e53f23c4c9903c3f generated by pipe2py

from pipe2py import Context
from pipe2py.modules.pipeforever import pipe_forever
from pipe2py.modules.pipedateformat import pipe_dateformat
from pipe2py.modules.pipetextinput import pipe_textinput
from pipe2py.modules.pipestrconcat import pipe_strconcat
from pipe2py.modules.pipeurlbuilder import pipe_urlbuilder
from pipe2py.modules.pipefetch import pipe_fetch
from pipe2py.modules.pipeloop import pipe_loop
from pipe2py.modules.pipetextinput import pipe_textinput
from pipe2py.modules.pipestrconcat import pipe_strconcat
from pipe2py.modules.pipestrconcat import pipe_strconcat
from pipe2py.modules.piperegex import pipe_regex
from pipe2py.modules.piperegex import pipe_regex
from pipe2py.modules.pipeoutput import pipe_output

def pipe_ac45e9eb9b0174a4e53f23c4c9903c3f(context=None, _INPUT=None, conf=None, **kwargs):
    # todo: insert pipeline description here
    conf = conf or {}

    if context.describe_input:
        return [(u'0', u'username', u'Twitter username', u'text', u''), (u'1', u'statustitle', u'Status title [string] or [logo] means twitter icon', u'text', u'logo')]

    forever = pipe_forever()

    # We need to wrap submodules (used by loops) so we can pass the
    # input at runtime (as we can to subpipelines)
    def pipe_sw_230(context=None, _INPUT=None, conf=None, **kwargs):
        # todo: insert submodule description here
        sw_230 = pipe_dateformat(
            context, _INPUT, conf=dict(format=dict(type='text', value='%R:%S')))
        return sw_230
    

    sw_75 = pipe_textinput(
        context, forever, conf=dict(default=dict(type='text', value=''), position=dict(type='number', value='0'), prompt=dict(type='text', value='Twitter username'), name=dict(type='text', value='username'), debug=dict(type='text', value='djmonta')))

    sw_102 = pipe_strconcat(
        context, forever, conf=dict(part=[dict(terminal='1_part', type='text'), dict(type='text', value='.atom')]), _1_part=sw_75)

    sw_90 = pipe_urlbuilder(
        context, forever, _1_PATH=sw_102, conf=dict(PATH=dict(terminal='1_PATH', type='text'), BASE=dict(type='text', value=''), PARAM=[]))

    sw_112 = pipe_fetch(
        context, forever, _1_URL=sw_90, conf=dict(URL=dict(terminal='1_URL', type='url')))

    sw_350 = pipe_loop(
        context, sw_112, embed=pipe_sw_230, conf={'assign_part': dict(type='text', value='all'), 'with': dict(type='text', value='pubDate'), 'emit_part': dict(type='text', value='all'), 'mode': dict(type='text', value='assign'), 'embed': dict(type='module', value=dict(type='dateformat', id='sw-230', conf=dict(format=dict(type='text', value='%R:%S')))), 'assign_to': dict(type='text', value='loop:dateformat')})

    sw_159 = pipe_textinput(
        context, forever, conf=dict(default=dict(type='text', value='logo'), position=dict(type='number', value='1'), prompt=dict(type='text', value='Status title [string] or [logo] means twitter icon'), name=dict(type='text', value='statustitle'), debug=dict(type='text', value='logo')))

    sw_194 = pipe_strconcat(
        context, forever, _2_part=sw_159, conf=dict(part=[dict(type='text', value='['), dict(terminal='2_part', type='text'), dict(type='text', value='] ')]))

    sw_163 = pipe_strconcat(
        context, forever, _2_part=sw_159, conf=dict(part=[dict(type='text', value='&lt;a href="${link}" style="border:0;"&gt;['), dict(terminal='2_part', type='text'), dict(type='text', value=']&lt;/a&gt; ')]))

    sw_120 = pipe_regex(
        context, sw_350, RULE_4_replace=sw_194, conf=dict(RULE=[dict(field=dict(type='text', value='description'), match=dict(type='text', value='((ftp|http|https|gopher|mailto|news|nntp|telnet|wais|file|prospero|aim|webcal):[A-Za-z0-9/](([A-Za-z0-9$_.+!*(),;/?:@&amp;~=-])|%[A-Fa-f0-9]{2})+(#([a-zA-Z0-9][a-zA-Z0-9$_.+!*(),;/?:@&amp;~=%-]*))?)'), replace=dict(type='text', value='&lt;a href="$1"&gt;$1&lt;/a&gt;')), dict(field=dict(type='text', value='description'), match=dict(type='text', value='(\\s+)@([a-zA-Z0-9_]+)'), replace=dict(type='text', value='$1@&lt;a href="http://twitter.com/$2"&gt;$2&lt;/a&gt;')), dict(field=dict(type='text', value='description'), match=dict(type='text', value='^[a-zA-Z0-9_]+:'), replace=dict(terminal='RULE_3_replace', type='text')), dict(field=dict(type='text', value='title'), match=dict(type='text', value='^[a-zA-Z0-9_]+:'), replace=dict(terminal='RULE_4_replace', type='text')), dict(field=dict(type='text', value='title'), match=dict(type='text', value='(.*)'), replace=dict(type='text', value='$1 [${loop:dateformat}]')), dict(field=dict(type='text', value='description'), match=dict(type='text', value='(.*)'), replace=dict(type='text', value='$1 [${loop:dateformat}]'))]), RULE_3_replace=sw_163)

    sw_202 = pipe_regex(
        context, sw_120, conf=dict(RULE=[dict(field=dict(type='text', value='description'), match=dict(type='text', value='\\[logo\\]'), replace=dict(type='text', value='&lt;img style="border:0;" src="http://twitter.com/favicon.ico"&gt;')), dict(field=dict(type='text', value='title'), match=dict(type='text', value='\\[logo\\]\\s'), replace=dict(type='text', value=''))]))

    _OUTPUT = pipe_output(
        context, sw_202, conf=dict())

    return _OUTPUT


if __name__ == "__main__":
    context = Context()
    pipeline = pipe_ac45e9eb9b0174a4e53f23c4c9903c3f(context, None)

    for i in pipeline:
        print i