# Pipe pipe_1LNyRuNS3BGdkTKaAsqenA generated by pipe2py

from pipe2py import Context
from pipe2py.modules.pipeforever import pipe_forever
from pipe2py.modules.pipetextinput import pipe_textinput
from pipe2py.modules.pipetextinput import pipe_textinput
from pipe2py.modules.pipeurlbuilder import pipe_urlbuilder
from pipe2py.modules.pipefetch import pipe_fetch
from pipe2py.modules.pipefilter import pipe_filter
from pipe2py.modules.pipeoutput import pipe_output

def pipe_1LNyRuNS3BGdkTKaAsqenA(context=None, _INPUT=None, conf=None, **kwargs):
    # todo: insert pipeline description here
    conf = conf or {}

    if context.describe_input:
        return [(u'', u'textinput1', u'Stock Symbol:', u'text', u'yhoo'), (u'', u'textinput2', u'Search Term:', u'text', u'')]

    forever = pipe_forever()


    sw_131 = pipe_textinput(
        context, forever, conf=dict(default=dict(type='text', value=''), position=dict(type='number', value=''), prompt=dict(type='text', value='Search Term:'), name=dict(type='text', value='textinput2'), debug=dict(type='text', value='')))

    sw_116 = pipe_textinput(
        context, forever, conf=dict(default=dict(type='text', value='yhoo'), position=dict(type='number', value=''), prompt=dict(type='text', value='Stock Symbol:'), name=dict(type='text', value='textinput1'), debug=dict(type='text', value='yhoo')))

    sw_85 = pipe_urlbuilder(
        context, forever, PARAM_1_value=sw_116, conf=dict(PATH=dict(type='text', value='headline'), BASE=dict(type='text', value=''), PARAM=[dict(value=dict(terminal='PARAM_1_value', type='text'), key=dict(type='text', value='s'))]))

    sw_108 = pipe_fetch(
        context, forever, _1_URL=sw_85, conf=dict(URL=dict(terminal='1_URL', type='url')))

    sw_120 = pipe_filter(
        context, sw_108, RULE_1_value=sw_131, conf=dict(COMBINE=dict(type='text', value='and'), MODE=dict(type='text', value='permit'), RULE=[dict(field=dict(type='text', value='description'), value=dict(terminal='RULE_1_value', type='text'), op=dict(type='text', value='contains'))]))

    _OUTPUT = pipe_output(
        context, sw_120, conf=dict())

    return _OUTPUT


if __name__ == "__main__":
    context = Context()
    pipeline = pipe_1LNyRuNS3BGdkTKaAsqenA(context, None)

    for i in pipeline:
        print i