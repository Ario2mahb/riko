# Pipe pipe_c1cfa58f96243cea6ff50a12fc50c984 generated by pipe2py

from pipe2py import Context
from pipe2py.modules.pipeforever import pipe_forever
from pipe2py.pypipelines.pipe_2de0e4517ed76082dcddf66f7b218057 import pipe_2de0e4517ed76082dcddf66f7b218057
from pipe2py.modules.pipefetch import pipe_fetch
from pipe2py.modules.pipeunion import pipe_union
from pipe2py.modules.pipefilter import pipe_filter
from pipe2py.modules.pipeoutput import pipe_output


def pipe_c1cfa58f96243cea6ff50a12fc50c984(context=None, _INPUT=None, conf=None, **kwargs):
    # todo: insert pipeline description here
    conf = conf or {}

    if context.describe_input:
        return []

    forever = pipe_forever()


    sw_479 = pipe_2de0e4517ed76082dcddf66f7b218057(
        context, forever, conf={})

    sw_486 = pipe_fetch(
        context, forever, conf={'URL': [{'type': 'url', 'value': 'file://data/www.slideshare.net_rss_user_psychemedia.xml'}, {'type': 'url', 'value': ''}, {'type': 'url', 'value': 'file://data/feeds.delicious.com_v2_rss_psychemedia?count=15.xml'}]})

    sw_506 = pipe_union(
        context, sw_479, _OTHER1=sw_486, conf={})

    sw_519 = pipe_filter(
        context, sw_506, conf={'COMBINE': {'type': 'text', 'value': 'or'}, 'MODE': {'type': 'text', 'value': 'permit'}, 'RULE': [{'field': {'type': 'text', 'value': 'title'}, 'value': {'type': 'text', 'value': 'presentation'}, 'op': {'type': 'text', 'value': 'contains'}}, {'field': {'type': 'text', 'value': 'description'}, 'value': {'type': 'text', 'value': 'presentation'}, 'op': {'type': 'text', 'value': 'contains'}}]})

    _OUTPUT = pipe_output(
        context, sw_519, conf={})

    return _OUTPUT


if __name__ == "__main__":
    context = Context()
    pipeline = pipe_c1cfa58f96243cea6ff50a12fc50c984(context, None)

    for i in pipeline:
        print i
