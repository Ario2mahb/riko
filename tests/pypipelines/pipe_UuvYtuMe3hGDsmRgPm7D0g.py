# Pipe pipe_UuvYtuMe3hGDsmRgPm7D0g generated by pipe2py

from pipe2py import Context
from pipe2py.modules.pipeforever import pipe_forever
from pipe2py.modules.pipestrconcat import pipe_strconcat
from pipe2py.modules.pipetextinput import pipe_textinput
from pipe2py.modules.pipestrconcat import pipe_strconcat
from pipe2py.modules.pipecsv import pipe_csv
from pipe2py.modules.pipefilter import pipe_filter
from pipe2py.modules.piperename import pipe_rename
from pipe2py.modules.pipeloop import pipe_loop
from pipe2py.modules.pipeloop import pipe_loop
from pipe2py.modules.pipeoutput import pipe_output

def pipe_UuvYtuMe3hGDsmRgPm7D0g(context=None, _INPUT=None, conf=None, **kwargs):
    # todo: insert pipeline description here
    conf = conf or {}

    if context.describe_input:
        return [(u'', u'name', u'Name', u'text', u'Lancaster')]

    forever = pipe_forever()

    # We need to wrap submodules (used by loops) so we can pass the
    # input at runtime (as we can to subpipelines)
    def pipe_sw_581(context=None, _INPUT=None, conf=None, **kwargs):
        # todo: insert submodule description here
        sw_581 = pipe_strconcat(
            context, _INPUT, conf=dict(part=[dict(type='text', subkey='firstName'), dict(type='text', value=' '), dict(type='text', subkey='Member')]))
        return sw_581


    sw_371 = pipe_textinput(
        context, forever, conf=dict(default=dict(type='text', value='Lancaster'), position=dict(type='number', value=''), prompt=dict(type='text', value='Name'), name=dict(type='text', value='name'), debug=dict(type='text', value='')))
    # We need to wrap submodules (used by loops) so we can pass the
    # input at runtime (as we can to subpipelines)
    def pipe_sw_408(context=None, _INPUT=None, conf=None, **kwargs):
        # todo: insert submodule description here
        sw_408 = pipe_strconcat(
            context, _INPUT, conf=dict(part=[dict(type='text', value='Total allowances claimed, inc travel: '), dict(type='text', subkey='TotalAllowancesClaimedIncTravel'), dict(type='text', value='<br>Total basic allowances claimed, ex travel: '), dict(type='text', subkey='TotalBasicAllowancesExcTravel'), dict(type='text', value='<br>Total Travel claimed: '), dict(type='text', subkey='TotalTravelClaimed'), dict(type='text', value='<br>MP Mileage: '), dict(type='text', subkey='Mileage'), dict(type='text', value='<br>MP Rail Travel: '), dict(type='text', subkey='MPRail'), dict(type='text', value='<br>MP Air Travel: '), dict(type='text', subkey='MPAir'), dict(type='text', value='<br>Cost of staying away from main home: '), dict(type='text', subkey='CostofStayingAwayFromMainHome'), dict(type='text', value='<br>London Supplement: '), dict(type='text', subkey='LondonSupplement'), dict(type='text', value='<br>Office Running Costs: '), dict(type='text', subkey='OfficeRunningCosts'), dict(type='text', value='<br>Staffing Costs: '), dict(type='text', subkey='StaffingCosts')]))
        return sw_408


    sw_340 = pipe_csv(
        context, forever, conf=dict(other_sep=dict(type='text', value=''), URL=dict(type='url', value='file://data/spreadsheets.google.com_pub?key=p1rHUqg4g420UMaN1sPvaRg&output=csv&range=a1_AB646.csv'), skip=dict(type='number', value='0'), col_name=[dict(type='text', value='Member'), dict(type='text', value='firstName'), dict(type='text', value='TotalAllowancesClaimedIncTravel'), dict(type='text', value='TotalBasicAllowancesExcTravel'), dict(type='text', value='TotalTravelClaimed'), dict(type='text', value='CostofStayingAwayFromMainHome'), dict(type='text', value='LondonSupplement'), dict(type='text', value='OfficeRunningCosts'), dict(type='text', value='StaffingCosts'), dict(type='text', value='CentrallyPurchasedStationery'), dict(type='text', value='StationeryAssocdPostageCosts'), dict(type='text', value='CentralITProvision'), dict(type='text', value='StaffCoverAndOtherCosts'), dict(type='text', value='CommsAllowance'), dict(type='text', value='Mileage'), dict(type='text', value='MPRail'), dict(type='text', value='MPAir'), dict(type='text', value='MPMisc'), dict(type='text', value='MPOtherMileage'), dict(type='text', value='MPOtherRail'), dict(type='text', value='MPOtherAir'), dict(type='text', value='MPOtherEuropean'), dict(type='text', value='SpouseTotal'), dict(type='text', value='SpouseNumOfJourneys'), dict(type='text', value='FamilyTotal'), dict(type='text', value='FamilyNumOfJourneys'), dict(type='text', value='EmployeeTotal'), dict(type='text', value='EmployeeNumOfJourneys')], col_row_start=dict(type='number', value='1'), col_mode=dict(type='text', value='custom'), separator=dict(type='text', value=','), col_row_end=dict(type='number', value='1')))

    sw_375 = pipe_filter(
        context, sw_340, RULE_1_value=sw_371, conf=dict(COMBINE=dict(type='text', value='and'), MODE=dict(type='text', value='permit'), RULE=[dict(field=dict(type='text', value='Member'), value=dict(terminal='RULE_1_value', type='text'), op=dict(type='text', value='contains'))]))

    sw_385 = pipe_rename(
        context, sw_375, conf=dict(RULE=[dict(newval=dict(type='text', value='title'), field=dict(type='text', value='Member'), op=dict(type='text', value='copy'))]))

    sw_400 = pipe_loop(
        context, sw_385, embed=pipe_sw_408, conf={'assign_part': dict(type='text', value='all'), 'with': dict(type='text', value=''), 'emit_part': dict(type='text', value='all'), 'mode': dict(type='text', value='assign'), 'embed': dict(type='module', value=dict(type='strconcat', id='sw-408', conf=dict(part=[dict(type='text', value='Total allowances claimed, inc travel: '), dict(type='text', subkey='TotalAllowancesClaimedIncTravel'), dict(type='text', value='<br>Total basic allowances claimed, ex travel: '), dict(type='text', subkey='TotalBasicAllowancesExcTravel'), dict(type='text', value='<br>Total Travel claimed: '), dict(type='text', subkey='TotalTravelClaimed'), dict(type='text', value='<br>MP Mileage: '), dict(type='text', subkey='Mileage'), dict(type='text', value='<br>MP Rail Travel: '), dict(type='text', subkey='MPRail'), dict(type='text', value='<br>MP Air Travel: '), dict(type='text', subkey='MPAir'), dict(type='text', value='<br>Cost of staying away from main home: '), dict(type='text', subkey='CostofStayingAwayFromMainHome'), dict(type='text', value='<br>London Supplement: '), dict(type='text', subkey='LondonSupplement'), dict(type='text', value='<br>Office Running Costs: '), dict(type='text', subkey='OfficeRunningCosts'), dict(type='text', value='<br>Staffing Costs: '), dict(type='text', subkey='StaffingCosts')]))), 'assign_to': dict(type='text', value='description')})

    sw_573 = pipe_loop(
        context, sw_400, embed=pipe_sw_581, conf={'assign_part': dict(type='text', value='all'), 'with': dict(type='text', value=''), 'emit_part': dict(type='text', value='all'), 'mode': dict(type='text', value='assign'), 'embed': dict(type='module', value=dict(type='strconcat', id='sw-581', conf=dict(part=[dict(type='text', subkey='firstName'), dict(type='text', value=' '), dict(type='text', subkey='Member')]))), 'assign_to': dict(type='text', value='title')})

    _OUTPUT = pipe_output(
        context, sw_573, conf=dict())

    return _OUTPUT


if __name__ == "__main__":
    context = Context()
    pipeline = pipe_UuvYtuMe3hGDsmRgPm7D0g(context, None)

    for i in pipeline:
        print i
