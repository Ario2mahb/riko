# Pipe pipe_zKJifuNS3BGLRQK_GsevXg generated by pipe2py

from pipe2py import Context
from pipe2py.modules.pipeforever import pipe_forever
from pipe2py.modules.pipefetch import pipe_fetch
from pipe2py.modules.pipesplit import pipe_split
from pipe2py.modules.pipecount import pipe_count
from pipe2py.modules.pipesimplemath import pipe_simplemath
from pipe2py.modules.pipesimplemath import pipe_simplemath
from pipe2py.modules.pipetruncate import pipe_truncate
from pipe2py.modules.pipeoutput import pipe_output

def pipe_zKJifuNS3BGLRQK_GsevXg(context=None, _INPUT=None, conf=None, **kwargs):
    # todo: insert pipeline description here
    conf = conf or {}

    if context.describe_input:
        return []

    forever = pipe_forever()


    sw_224 = pipe_fetch(
        context, forever, conf=dict(URL=dict(type='url', value='file://data/www.sciencedaily.com_rss_computers_math.html')))

    sw_250 = pipe_split(
        context, sw_224, splits=2, conf=None)

    sw_243 = pipe_count(
        context, sw_250, conf=None)

    sw_94 = pipe_simplemath(
        context, sw_243, conf=dict(OTHER=dict(type='number', value='5'), OP=dict(type='text', value='modulo')))

    sw_169 = pipe_simplemath(
        context, sw_243, OTHER=sw_94, conf=dict(OTHER=dict(terminal='OTHER', type='number'), OP=dict(type='text', value='subtract')))

    sw_232 = pipe_truncate(
        context, sw_250, count=sw_169, conf=dict(count=dict(terminal='count', type='number')))

    _OUTPUT = pipe_output(
        context, sw_232, conf=None)

    return _OUTPUT


if __name__ == "__main__":
    context = Context()
    pipeline = pipe_zKJifuNS3BGLRQK_GsevXg(context, None)

    for i in pipeline:
        print i
