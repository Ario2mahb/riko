# Pipe pipe_zKJifuNS3BGLRQK_GsevXg generated by pipe2py

from pipe2py import Context
from pipe2py.modules.pipeforever import pipe_forever
from pipe2py.modules.pipefetch import pipe_fetch
from pipe2py.modules.pipesplit import pipe_split
from pipe2py.modules.pipecount import pipe_count
from pipe2py.modules.pipesimplemath import pipe_simplemath
from pipe2py.modules.pipesimplemath import pipe_simplemath
from pipe2py.modules.pipetruncate import pipe_truncate
from pipe2py.modules.pipeoutput import pipe_output


def pipe_zKJifuNS3BGLRQK_GsevXg(context=None, _INPUT=None, conf=None, **kwargs):
    # todo: insert pipeline description here
    conf = conf or {}

    if context and context.describe_input:
        return []

    if context and context.describe_dependencies:
        return [u'pipecount', u'pipefetch', u'pipeoutput', u'pipesimplemath', u'pipesplit', u'pipetruncate']

    forever = pipe_forever()

    sw_224 = pipe_fetch(
        context, forever, conf={'URL': {'type': 'url', 'value': 'file://data/www.sciencedaily.com_rss_computers_math.html'}})
    
    sw_250 = pipe_split(
        context, sw_224, splits=2, conf=None)
    
    sw_243 = pipe_count(
        context, sw_250, conf=None)
    
    sw_94 = pipe_simplemath(
        context, sw_243, conf={'OTHER': {'type': 'number', 'value': '5'}, 'OP': {'type': 'text', 'value': 'modulo'}})
    
    sw_169 = pipe_simplemath(
        context, sw_243, OTHER=sw_94, conf={'OTHER': {'terminal': 'OTHER', 'type': 'number'}, 'OP': {'type': 'text', 'value': 'subtract'}})
    
    sw_232 = pipe_truncate(
        context, sw_250, count=sw_169, conf={'count': {'terminal': 'count', 'type': 'number'}})
    
    _OUTPUT = pipe_output(
        context, sw_232, conf=None)
    
    return _OUTPUT


if __name__ == "__main__":
    pipeline = pipe_zKJifuNS3BGLRQK_GsevXg(Context())

    for i in pipeline:
        print i