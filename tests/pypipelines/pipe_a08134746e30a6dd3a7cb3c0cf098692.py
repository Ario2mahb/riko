# Pipe pipe_a08134746e30a6dd3a7cb3c0cf098692 generated by pipe2py

from pipe2py import Context
from pipe2py.modules.pipeforever import pipe_forever
from pipe2py.modules.pipestrconcat import pipe_strconcat
from pipe2py.modules.pipexpathfetchpage import pipe_xpathfetchpage
from pipe2py.modules.pipeloop import pipe_loop
from pipe2py.modules.piperename import pipe_rename
from pipe2py.modules.pipecreaterss import pipe_createrss
from pipe2py.modules.pipeoutput import pipe_output

def pipe_a08134746e30a6dd3a7cb3c0cf098692(context=None, _INPUT=None, conf=None, **kwargs):
    # todo: insert pipeline description here
    conf = conf or {}

    if context.describe_input:
        return []

    forever = pipe_forever()

    # We need to wrap submodules (used by loops) so we can pass the
    # input at runtime (as we can to subpipelines)
    def pipe_sw_515(context=None, _INPUT=None, conf=None, **kwargs):
        # todo: insert submodule description here
        sw_515 = pipe_strconcat(
            context, _INPUT, conf=dict(part=[dict(type='text', value='<img src="'), dict(type='text', subkey='img.src'), dict(type='text', value='">')]))
        return sw_515
    

    sw_327 = pipe_xpathfetchpage(
        context, forever, conf=dict(URL=dict(type='url', value=''), xpath=dict(type='text', value="//a[@class='PinImage ImgLink']")))

    sw_507 = pipe_loop(
        context, sw_327, embed=pipe_sw_515, conf={'assign_part': dict(type='text', value='all'), 'with': dict(type='text', value=''), 'emit_part': dict(type='text', value='all'), 'mode': dict(type='text', value='assign'), 'embed': dict(type='module', value=dict(type='strconcat', id='sw-515', conf=dict(part=[dict(type='text', value='<img src="'), dict(type='text', subkey='img.src'), dict(type='text', value='">')]))), 'assign_to': dict(type='text', value='description')})

    sw_303 = pipe_rename(
        context, sw_507, conf=dict(RULE=dict(newval=dict(type='text', value='link'), op=dict(type='text', value='rename'), field=dict(type='text', value='href'))))

    sw_443 = pipe_createrss(
        context, sw_303, conf=dict(mediaContentHeight=dict(type='text', value=''), mediaThumbURL=dict(type='text', value=''), mediaContentType=dict(type='text', value=''), description=dict(type='text', value=''), pubdate=dict(type='text', value=''), author=dict(type='text', value=''), title=dict(type='text', value='img.alt'), mediaThumbHeight=dict(type='text', value=''), link=dict(type='text', value=''), mediaContentWidth=dict(type='text', value=''), mediaContentURL=dict(type='text', value='img.src'), guid=dict(type='text', value=''), mediaThumbWidth=dict(type='text', value='')))

    sw_261 = pipe_output(
        context, sw_443, conf=None)

    return sw_261


if __name__ == "__main__":
    context = Context()
    pipeline = pipe_a08134746e30a6dd3a7cb3c0cf098692(context, None)

    for i in pipeline:
        print i