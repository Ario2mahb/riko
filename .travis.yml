sudo: false
language: python
python:
  - "2.7"
  - "3.4"
  - "3.5"
  - "pypy"
  - "pypy3"

cache:
  directories:
    - ~/.cache/pip

env:
  global:
    - PIP_WHEEL_DIR=$HOME/.cache/pip/wheels
    - PIP_FIND_LINKS=file://$HOME/.cache/pip/wheels
    - PYTHONHASHSEED=94967295

notifications:
  email:
    on_success: always

branches:
  except:
    - /^v[0-9]/

before_install:
  - pip install -U pip
  - pip install wheel
  - |
      if [ "$TRAVIS_PYTHON_VERSION" = "pypy" ]; then
        export PYENV_ROOT="$HOME/.pyenv"
        if [ -f "$PYENV_ROOT/bin/pyenv" ]; then
          pushd "$PYENV_ROOT" && git pull && popd
        else
          rm -rf "$PYENV_ROOT" && git clone --depth 1 https://github.com/yyuu/pyenv.git "$PYENV_ROOT"
        fi
        export PYPY_VERSION="5.1.1"
        "$PYENV_ROOT/bin/pyenv" install --skip-existing "pypy-$PYPY_VERSION"
        virtualenv --python="$PYENV_ROOT/versions/pypy-$PYPY_VERSION/bin/python" "$HOME/virtualenvs/pypy-$PYPY_VERSION"
        source "$HOME/virtualenvs/pypy-$PYPY_VERSION/bin/activate"
      fi

install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then then pip install -r py2-requirements.txt; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "pypy" ]]; then pip install -r py2-requirements.txt; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "3.4" ]]; then pip install -r requirements.txt; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "3.5" ]]; then pip install -r requirements.txt; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "pypy3" ]]; then pip install -r requirements.txt; fi
  - pip install -r dev-requirements.txt
  - pip install -r optional-requirements.txt

script:
  - manage lint
  - manage test

after_success:
  - if [[ "$TRAVIS_PULL_REQUEST" == "true" ]]; then exit 0; fi
  - if [[ "$TRAVIS_BRANCH" != "master" ]]; then exit 0; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" != "2.7" ]]; then exit 0; fi

deploy:
  provider: pypi
  user: reubano
  password:
    secure: secure

  distributions: sdist bdist_wheel
  on:
    tags: true
